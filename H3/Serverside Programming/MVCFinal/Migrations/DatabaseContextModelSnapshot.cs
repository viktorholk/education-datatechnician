// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCFinal.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("MVCFinal.Models.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Case");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Description = "Uncool the cool product please",
                            ProductId = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Description = "Make this sample product into a real one",
                            ProductId = 1,
                            Type = 1
                        });
                });

            modelBuilder.Entity("MVCFinal.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Username = "Viktor"
                        },
                        new
                        {
                            Id = 2,
                            Username = "Sigurd"
                        });
                });

            modelBuilder.Entity("MVCFinal.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is just a sample product",
                            Name = "Sample Product"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cool product man",
                            Name = "The Cooler Product"
                        });
                });

            modelBuilder.Entity("MVCFinal.Models.ResourceTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("ResourceTask");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CaseId = 1,
                            Description = "Uncool the product with barbeque tongs",
                            Status = 2
                        },
                        new
                        {
                            Id = 2,
                            CaseId = 1,
                            Description = "Finalizations",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CaseId = 2,
                            Description = "Do the Magic Mike",
                            Status = 0
                        });
                });

            modelBuilder.Entity("MVCFinal.Models.Case", b =>
                {
                    b.HasOne("MVCFinal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCFinal.Models.Product", "Product")
                        .WithMany("Cases")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MVCFinal.Models.ResourceTask", b =>
                {
                    b.HasOne("MVCFinal.Models.Case", "Case")
                        .WithMany("Resources")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");
                });

            modelBuilder.Entity("MVCFinal.Models.Case", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("MVCFinal.Models.Product", b =>
                {
                    b.Navigation("Cases");
                });
#pragma warning restore 612, 618
        }
    }
}
